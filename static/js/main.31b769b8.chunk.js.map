{"version":3,"sources":["panels/Home.js","panels/Place.js","panels/Checkbox.js","panels/Basket.js","panels/Order.js","panels/Orders.js","App.js","index.js","img/edit.svg","img/1.png","img/3.png","img/2.png","img/4.png","img/check-symbol.svg","img/refresh-button.svg","img/kfc.png","img/burger.png","img/mcdac.png","img/sub.png"],"names":["Home","foodAreas","order","className","map","area","key","id","to","name","alt","src","edit","items","item","link","image","description","Object","keys","length","defaultProps","Place","onIncrementPosition","onDecrementPosition","price","useMemo","foodIds","Set","foods","result","values","filter","value","has","reduce","count","parseInt","accounting","formatNumber","food","composition","onClick","itemId","areaId","unformat","Checkbox","checked","onToggle","onChange","type","Check","withRouter","match","params","useState","store","faster","setFaster","time","setTime","selfService","setSelfService","useEffect","products","event","target","onBlur","Order","history","setActiveOrder","setCanceledOrder","setTimeout","push","Orders","orderStatuses","activeOrders","activeOrdersList","shopId","activeOrdersSet","forEach","data","placeId","placeName","shopName","finishedOrders","refresh","setFinishedOrder","FOOD_AREAS","kfc","FourTowar","OneTowar","burger","TwoTowar","ThreeTowar","mcdac","sub","placesMap","foodsMap","App","JSON","parse","localStorage","getItem","setOrderStatuses","setOrder","basename","process","path","exact","nextStatuses","setItem","stringify","render","routeProps","location","pathname","updatedOrder","nextOrderStatuses","status","serialized","bridge","send","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.31b769b8.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport edit from '../img/edit.svg'\r\nimport './Home.css'\r\n\r\nconst Home = ({ foodAreas, order }) => (\r\n  <>\r\n    <ul className='Home'>\r\n      {foodAreas.map(area => (\r\n        <li\r\n          key={ area.id }\r\n        >\r\n          <div className='Home__fixed-content'>\r\n            <header className='Home__header'>\r\n              <h1 className='Home__head'>\r\n                <Link to='/' className='Home__logo'>\r\n                  {area.name}\r\n                </Link>\r\n              </h1>\r\n              <Link to='/' className='Home__change-tz'>\r\n                <img\r\n                  className='Home__edit'\r\n                  alt='change-profile'\r\n                  src={ edit }\r\n                />\r\n              </Link>\r\n            </header>\r\n            <ul className='Home__tabs'>\r\n              <li className='Home__tab Home__tab_active'>\r\n                Еда\r\n              </li>\r\n              {/* <li className=\"Home__tab Home__tab_disabled\">\r\n                Развлечения\r\n              </li>\r\n              <li className=\"Home__tab Home__tab_disabled\">\r\n                Здоровье\r\n              </li> */}\r\n            </ul>\r\n          </div>\r\n          <ul className='Home__items'>\r\n            {area.items.map(item => (\r\n              <li\r\n                className='Home__item'\r\n                key={ item.id }\r\n              >\r\n                <Link\r\n                  className='Home__food-link'\r\n                  to={ item.link }\r\n                >\r\n                  <img\r\n                    alt={ item.name }\r\n                    className='Home__image'\r\n                    src={ item.image }\r\n                  />\r\n                  <h3 className='Home__food-name'>\r\n                    {item.name}\r\n                  </h3>\r\n                  <p className='Home__food-type'>{item.description}</p>\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    {Object.keys(order).length !== 0 && (\r\n      <footer className='Footer'>\r\n        <Link to='/orders' className='Footer__orders'>\r\n          Мои заказы\r\n        </Link>\r\n      </footer>\r\n    )}\r\n  </>\r\n)\r\n\r\nHome.propTypes = {\r\n  foodAreas: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      description: PropTypes.string,\r\n      url: PropTypes.string,\r\n    })),\r\n  })),\r\n}\r\n\r\nHome.defaultProps = {\r\n  foodAreas: [],\r\n}\r\n\r\nexport default Home\r\n","import React, { useMemo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport accounting from 'accounting'\r\n// import PropTypes from 'prop-types';\r\n\r\nimport edit from '../img/edit.svg'\r\nimport './place.css'\r\n\r\nconst Place = ({ item, order, onIncrementPosition, onDecrementPosition, area }) => {\r\n  const price = useMemo(() => {\r\n    const foodIds = new Set((item.foods || []).map(item => item.id))\r\n\r\n    const result = Object.values(order)\r\n      .filter((value) => {\r\n        const { item: { id } } = value\r\n\r\n        return foodIds.has(id)\r\n      })\r\n      .reduce((result, value) => {\r\n        const { count, item: { price } } = value\r\n        // TODO: ну это моветон, в real-world приложениях руки бы оторвал тому кто так сделает\r\n        return parseInt(result) + parseInt(price) * parseInt(count)\r\n      }, 0)\r\n\r\n    return accounting.formatNumber(result, 0, ' ')\r\n  }, [order, item])\r\n\r\n  return (\r\n    <div className='Place'>\r\n      <header className='Place__header'>\r\n        <aside className='Place__trz'>\r\n          <h1 className='Place__head'>\r\n            <Link to='/' className='Place__logo'>\r\n              {area.name}\r\n            </Link>\r\n          </h1>\r\n          <Link to='/' className='Place__change-tz'>\r\n            <img\r\n              alt='change-profile'\r\n              src={ edit }\r\n            />\r\n          </Link>\r\n        </aside>\r\n      </header>\r\n      <aside className='Place__restoraunt'>\r\n        <img\r\n          className='Place__restoraunt-logo'\r\n          alt='Fastfood logo'\r\n          src={ item.image }\r\n        />\r\n        <h2\r\n          className='Place__restoraunt-name'\r\n        >\r\n          {item.name}\r\n        </h2>\r\n        <p className='Place__restoraunt-type'>\r\n          {item.description}\r\n        </p>\r\n      </aside>\r\n      <ul className='Place__foods'>\r\n        {item.foods.map(food => (\r\n          <li\r\n            className='Place__food'\r\n            key={ food.id }\r\n          >\r\n            <div className='Place__food-logo-wrapper'>\r\n              <img\r\n                alt='food logo'\r\n                className='Place__food-logo'\r\n                src={ food.image }\r\n              />\r\n            </div>\r\n            <h3 className='Place__food-name'>\r\n              {food.name}\r\n            </h3>\r\n            <p className='Place__food-composition'>\r\n              {food.composition}\r\n            </p>\r\n            <div className='Place__food-price'>\r\n              <span className='.Place__food-price-price'>Цена: {food.price}&nbsp;&nbsp;</span>\r\n              <button\r\n                className='Place__food-button'\r\n                onClick={ () => {\r\n                  onDecrementPosition({ id: food.id, itemId: item.id, areaId: area.id })\r\n                } }\r\n              >\r\n                -\r\n              </button>\r\n              <span>&nbsp;{food.id in order ? order[food.id].count : 0}&nbsp;</span>\r\n              <button\r\n                className='Place__food-button'\r\n                onClick={ () => {\r\n                  onIncrementPosition({ id: food.id, itemId: item.id, areaId: area.id })\r\n                } }\r\n              >\r\n                +\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <footer className='Place__footer'>\r\n        {\r\n          // TODO: в real-world приложениях должна быть проверка на количество позиций в заказе, а не на сумму заказа\r\n          // Т.к price в человеко-понятном формате, надо привести обратно к типу Number\r\n          accounting.unformat(price) > 0 ? (\r\n            <Link to={ `/basket/${area.id}/${item.id}` } className='Place__order'>\r\n              Оформить заказ ({price})\r\n            </Link>\r\n          ) : (\r\n            <Link className='Place__order Place__order--disabled'>\r\n              Оформить заказ\r\n            </Link>\r\n          )\r\n        }\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nPlace.defaultProps = {\r\n  item: {},\r\n  onIncrementPosition: () => { },\r\n  onDecrementPosition: () => { },\r\n}\r\n\r\nexport default Place\r\n","import React from 'react'\r\n\r\nimport './Checkbox.css'\r\nimport Check from '../img/check-symbol.svg'\r\n\r\nconst Checkbox = ({ checked, onToggle }) => {\r\n  return (\r\n    <div className='Checkbox'>\r\n      <input\r\n        checked={ checked }\r\n        onChange={ onToggle }\r\n        type='checkbox'\r\n      />\r\n      <img\r\n        alt='custom checkbox logo'\r\n        src={ Check }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nCheckbox.defaultProps = {\r\n  onToggle: () => { },\r\n}\r\n\r\nexport default Checkbox\r\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport * as store from 'store2'\r\nimport accounting from 'accounting'\r\n\r\nimport Checkbox from './Checkbox'\r\n\r\nimport edit from '../img/edit.svg'\r\nimport './place.css'\r\n\r\nconst Basket = function({ match: { params: { areaId, itemId } }, foodAreas, order }) {\r\n  const [faster, setFaster] = useState(store.get('basket.faster', true))\r\n  const [time, setTime] = useState(store.get('basket.time', ''))\r\n  const [selfService, setSelfService] = useState(store.get('basket.selfService', false))\r\n  const area = foodAreas.filter(area => area.id === areaId)[0]\r\n  const item = area.items.filter(item => item.id === itemId)[0]\r\n\r\n  // Хук на изменение состояний, для сохранения в хранилище\r\n  useEffect(() => {\r\n    // Сохраняем состояния переменных\r\n    store.set('basket.faster', faster)\r\n    store.set('basket.time', time)\r\n    store.set('basket.selfService', selfService)\r\n  })\r\n\r\n  const [price, products] = useMemo(() => {\r\n    const foodIds = new Set((item.foods || []).map(item => item.id))\r\n\r\n    const products = Object.values(order)\r\n      .filter((value) => {\r\n        const { item: { id } } = value\r\n\r\n        return foodIds.has(id)\r\n      })\r\n\r\n    const result = products.reduce((result, value) => {\r\n      const { count, item } = value\r\n      // TODO: ну это моветон, в real-world приложениях руки бы оторвал тому кто так сделает\r\n      return parseInt(result) + parseInt(item.price) * parseInt(count)\r\n    }, 0)\r\n\r\n    return [accounting.formatNumber(result, 0, ' '), products]\r\n  }, [order, item])\r\n\r\n  return (\r\n    <div className='Place'>\r\n      <header className='Place__header'>\r\n        <aside className='Place__trz'>\r\n          <h1 className='Place__head'>\r\n            <Link to='/' className='Place__logo'>\r\n              {area.name}\r\n            </Link>\r\n          </h1>\r\n          <Link to={ `/place/${areaId}/${itemId}` } className='Place__change-tz'>\r\n            <img\r\n              alt='change-profile'\r\n              src={ edit }\r\n            />\r\n          </Link>\r\n        </aside>\r\n      </header>\r\n      <aside className='Place__restoraunt'>\r\n        <img\r\n          className='Place__restoraunt-logo'\r\n          alt='Fastfood logo'\r\n          src={ item.image }\r\n        />\r\n        <h2\r\n          className='Place__restoraunt-name'\r\n        >\r\n          {item.name}\r\n        </h2>\r\n        <p className='Place__restoraunt-type'>\r\n          {item.description}\r\n        </p>\r\n      </aside>\r\n      <div className='Place__products-wrapper'>\r\n        <ul className='Place__products'>\r\n          {products.map(({ item, count }) => (\r\n            <li\r\n              className='Place__product'\r\n              key={ item.id }\r\n            >\r\n              <img\r\n                className='Place__product-logo'\r\n                alt='Ordered product logo'\r\n                src={ item.image }\r\n              />\r\n              <h3\r\n                className='Place__product-name'\r\n              >\r\n                {item.name}\r\n              </h3>\r\n              <p\r\n                className='Place__product-price'\r\n              >\r\n                Цена: {item.price}\r\n              </p>\r\n              <p\r\n                className='Place__product-count'\r\n              >\r\n                x{count}\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <Link\r\n          className='Place__change-product'\r\n          to={ `/place/${areaId}/${itemId}` }\r\n        >\r\n          Изменить\r\n        </Link>\r\n      </div>\r\n      <div className='Place__choice'>\r\n        <h3>Время:</h3>\r\n        <div className='Place__choice-item'>\r\n          <span>Как можно быстрее</span>\r\n          <Checkbox\r\n            checked={ faster }\r\n            onToggle={ () => {\r\n              if (faster) {\r\n                setFaster(false)\r\n              } else {\r\n                setTime('')\r\n                setFaster(true)\r\n              }\r\n            } }\r\n          />\r\n        </div>\r\n        <div className='Place__choice-item'>\r\n          <span>Назначить</span>\r\n          <input\r\n            type='time'\r\n            value={ time }\r\n            onChange={ (event) => {\r\n              setFaster(false)\r\n              setTime(event.target.value)\r\n            } }\r\n            onBlur={ () => {\r\n              if (time) {\r\n                setFaster(false)\r\n              }\r\n            } }\r\n          />\r\n        </div>\r\n        <div className='Place__choice-item'>\r\n          <h3>С собой</h3>\r\n          <Checkbox checked={ selfService } onToggle={ () => setSelfService(!selfService) } />\r\n        </div>\r\n        <div className='Place__choice-item'>\r\n          <h3>На месте</h3>\r\n          <Checkbox checked={ !selfService } onToggle={ () => setSelfService(!setSelfService) } />\r\n        </div>\r\n      </div>\r\n      <footer className='Place__footer'>\r\n        {\r\n          // TODO: в real-world приложениях должна быть проверка на количество позиций в заказе, а не на сумму заказа\r\n          // Т.к price в человеко-понятном формате, надо привести обратно к типу Number\r\n          accounting.unformat(price) > 0 ? (\r\n            <Link to={ `/order/${area.id}/${item.id}` } className='Place__order'>\r\n              Оплатить {price}\r\n            </Link>\r\n          ) : (\r\n            <Link className='Place__order Place__order--disabled'>\r\n              Корзина пуста\r\n            </Link>\r\n          )\r\n        }\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Basket)\r\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nimport edit from '../img/edit.svg'\r\nimport './place.css'\r\n\r\nconst Order = ({ match: { params: { areaId, itemId } }, history, foodAreas, setCanceledOrder, setActiveOrder }) => {\r\n  const area = foodAreas.filter(area => area.id === areaId)[0]\r\n  const item = area.items.filter(item => item.id === itemId)[0]\r\n\r\n  return (\r\n    <div className='Place Place_order'>\r\n      <header className='Place__header'>\r\n        <aside className='Place__trz'>\r\n          <h1 className='Place__head'>\r\n            <Link to='/' className='Place__logo'>\r\n              {area.name}\r\n            </Link>\r\n          </h1>\r\n          <Link to={ `/place/${areaId}/${itemId}` } className='Place__change-tz'>\r\n            <img\r\n              alt='change-profile'\r\n              src={ edit }\r\n            />\r\n          </Link>\r\n        </aside>\r\n      </header>\r\n      <aside className='Place__restoraunt'>\r\n        <img\r\n          className='Place__restoraunt-logo'\r\n          alt='Fastfood logo'\r\n          src={ item.image }\r\n        />\r\n        <h2\r\n          className='Place__restoraunt-name'\r\n        >\r\n          {item.name}\r\n        </h2>\r\n        <p className='Place__restoraunt-type'>\r\n          {item.description}\r\n        </p>\r\n      </aside>\r\n      <div className='Place__order-body'>\r\n        <h3 className='Place__order-number-header'>\r\n          Номер вашего заказа\r\n        </h3>\r\n        <main className='Place__order-number'>\r\n          7\r\n        </main>\r\n        <p className='Place__order-number-header'>\r\n          Заказ будет готов через\r\n        </p>\r\n        <h3 className='Place__order-time'>\r\n          ~ 15 минут\r\n        </h3>\r\n      </div>\r\n      <footer className='Place__footer'>\r\n        { /* Тут тоже должен быть элемент <Link>, но не стал исправлять, тк тест может не найти кнопку на странице по тегу <a> */ }\r\n        <div\r\n          to='/orders'\r\n          className='Place__order'\r\n          onClick={ () => {\r\n            setActiveOrder({ itemId })\r\n\r\n            setTimeout(() => {\r\n              history.push('/orders')\r\n            }, 0)\r\n          } }\r\n        >\r\n          Мои заказы\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nOrder.defaultProps = {\r\n  setActiveOrder: () => { },\r\n  setCanceledOrder: () => {},\r\n}\r\n\r\nexport default withRouter(Order)\r\n","import React, { useMemo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport refresh from '../img/refresh-button.svg'\r\nimport './orders.css'\r\n\r\nconst Orders = ({ order, orderStatuses, foodAreas, setCanceledOrder, setActiveOrder }) => {\r\n  const activeOrders = useMemo(() => {\r\n    const activeOrdersList = Object.keys(orderStatuses)\r\n      .filter(shopId => orderStatuses[shopId] === 'ACTIVE')\r\n      .map(shopId => shopId)\r\n\r\n    const result = []\r\n    const activeOrdersSet = new Set(activeOrdersList)\r\n\r\n    foodAreas.forEach((area) => {\r\n      area.items.forEach((item) => {\r\n        if (activeOrdersSet.has(item.id)) {\r\n          const data = {\r\n            placeId: area.id,\r\n            placeName: area.name,\r\n            shopId: item.id,\r\n            shopName: item.name,\r\n            price: item.foods.reduce((result, food) => {\r\n              if (food.id in order) {\r\n                const { item: { price }, count } = order[food.id]\r\n\r\n                return result + parseInt(price) * parseInt(count)\r\n              }\r\n\r\n              return result\r\n            }, 0),\r\n            link: `/order/${area.id}/${item.id}`,\r\n          }\r\n\r\n          result.push(data)\r\n        }\r\n      })\r\n    })\r\n\r\n    return result\r\n  }, [order, orderStatuses, foodAreas])\r\n\r\n  const finishedOrders = useMemo(() => {\r\n    const activeOrdersList = Object.keys(orderStatuses)\r\n      .filter(shopId => orderStatuses[shopId] !== 'ACTIVE')\r\n      .map(shopId => shopId)\r\n\r\n    const result = []\r\n    const activeOrdersSet = new Set(activeOrdersList)\r\n\r\n    foodAreas.forEach((area) => {\r\n      area.items.forEach((item) => {\r\n        if (activeOrdersSet.has(item.id)) {\r\n          const data = {\r\n            placeName: area.name,\r\n            shopName: item.name,\r\n            shopId: item.id,\r\n            price: item.foods.reduce((result, food) => {\r\n              if (food.id in order) {\r\n                const { item: { price }, count } = order[food.id]\r\n\r\n                // TODO: ну это моветон, в real-world приложениях руки бы оторвал тому кто так сделает\r\n                return parseInt(result) + parseInt(price) * parseInt(count)\r\n              }\r\n\r\n              // TODO: добавить зашщиту от отрицательных значений\r\n              return parseInt(result)\r\n            }, 0),\r\n            link: `/order/${area.id}/${item.id}`,\r\n          }\r\n\r\n          result.push(data)\r\n        }\r\n      })\r\n    })\r\n\r\n    return result\r\n  }, [order, orderStatuses, foodAreas])\r\n\r\n  return (\r\n    <div className='Orders'>\r\n      <ul className='Orders__active-orders'>\r\n        {activeOrders.map(order => (\r\n          <li\r\n            className='Orders__active-order'\r\n            key={ order.link }\r\n          >\r\n            <div className='Orders__left'>\r\n              <h3 className='Orders__header'>{order.placeName}</h3>\r\n              <p className='Orders__shop-name'>{order.shopName}</p>\r\n              <p className='Orders__price'>Сумма {order.price} - Оплачено</p>\r\n            </div>\r\n            <div className='Orders__time'>\r\n              ~ 15 М\r\n            </div>\r\n            <Link\r\n              className='Orders__change'\r\n              to={ `/place/${order.placeId}/${order.shopId}` }\r\n            >\r\n              Изм\r\n            </Link>\r\n            <button\r\n              className='Orders__cancel'\r\n              onClick={ () => setCanceledOrder({ itemId: order.shopId }) }\r\n            >\r\n              Отм.\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <ul className='Orders__finished-orders'>\r\n        {finishedOrders.map(order => (\r\n          <li\r\n            className='Orders__finished-order'\r\n            key={ order.link }\r\n          >\r\n            <div className='Orders__left'>\r\n              <h3 className='Orders__header Orders__dark'>{order.placeName}</h3>\r\n              <p className='Orders__shop-name Orders__pink'>{order.shopName}</p>\r\n              <p className='Orders__price Orders__pink'>Сумма {order.price} - Оплачено</p>\r\n            </div>\r\n            <button\r\n              className='Orders__repeat'\r\n              onClick={ () => setActiveOrder({ itemId: order.shopId }) }\r\n            >\r\n              <img\r\n                className='Orders__refresh'\r\n                alt='repeat order'\r\n                src={ refresh }\r\n              />\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nOrders.defaultProps = {\r\n  setFinishedOrder: () => { },\r\n  setActiveOrder: () => { },\r\n  setCanceledOrder: () => {},\r\n}\r\n\r\nexport default Orders\r\n","import React, { useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Home from './panels/Home'\r\nimport Place from './panels/Place'\r\nimport Basket from './panels/Basket'\r\nimport Order from './panels/Order'\r\nimport Orders from './panels/Orders'\r\n\r\nimport './panels/App.css'\r\nimport kfc from './img/kfc.png'\r\nimport burger from './img/burger.png'\r\nimport mcdac from './img/mcdac.png'\r\nimport sub from './img/sub.png'\r\nimport OneTowar from './img/1.png'\r\nimport TwoTowar from './img/2.png'\r\nimport ThreeTowar from './img/3.png'\r\nimport FourTowar from './img/4.png'\r\n\r\nconst FOOD_AREAS = [{\r\n  id: 'pizikiva-gallery',\r\n  name: 'ТРЦ \"Им.Пыжикова\"',\r\n  items: [{\r\n    id: 'kfc',\r\n    name: 'KFC',\r\n    link: '/place/pizikiva-gallery/kfc',\r\n    description: 'Сеть ресторанов быстрого питания',\r\n    image: kfc,\r\n    foods: [{\r\n      id: 'classic',\r\n      image: FourTowar,\r\n      name: 'Классик',\r\n      price: 150,\r\n    }, {\r\n      id: 'fries',\r\n      image: OneTowar,\r\n      name: 'Картофель фри',\r\n      price: 50,\r\n    }],\r\n  }, {\r\n    id: 'burger-king',\r\n    name: 'Burger King',\r\n    link: '/place/pizikiva-gallery/burger-king',\r\n    description: 'Сеть ресторанов быстрого питания',\r\n    image: burger,\r\n    foods: [{\r\n      id: 'OneTowar',\r\n      name: 'Товар № 1',\r\n      composition: 'Состав: по ГОСТу',\r\n      price: 630,\r\n      image: OneTowar,\r\n    }, {\r\n      id: 'TwoTowar',\r\n      name: 'Товар № 2',\r\n      composition: 'Состав: по ГОСТу',\r\n      price: 450,\r\n      image: TwoTowar,\r\n    }, {\r\n      id: 'ThreeTowar',\r\n      name: 'Товар № 3',\r\n      composition: 'Состав: по ГОСТу',\r\n      price: 800,\r\n      image: ThreeTowar,\r\n    }, {\r\n      id: 'FourthTowar',\r\n      name: 'Товар № 4',\r\n      composition: 'Состав по ГОСТу',\r\n      price: 600,\r\n      image: FourTowar,\r\n    }],\r\n  }, {\r\n    id: 'macdac',\r\n    name: 'McDonal\\'s',\r\n    link: '/place/pizikiva-gallery/macdac',\r\n    description: 'Сеть ресторанов быстрого питания',\r\n    image: mcdac,\r\n    foods: [{\r\n      id: 'hamburger',\r\n      image: TwoTowar,\r\n      name: 'Гамбургер',\r\n      price: 50,\r\n    }, {\r\n      id: 'bigmac',\r\n      image: ThreeTowar,\r\n      name: 'Биг мак',\r\n      price: 200,\r\n    }],\r\n  }, {\r\n    id: 'subway',\r\n    name: 'SubWay',\r\n    link: '/place/pizikiva-gallery/subway',\r\n    image: sub,\r\n    description: 'Сеть ресторанов быстрого питания',\r\n    foods: [{\r\n      id: 'melt-sub',\r\n      image: ThreeTowar,\r\n      name: 'Сабвей мелт',\r\n      price: 300,\r\n    }, {\r\n      id: 'day-sub',\r\n      image: OneTowar,\r\n      name: 'Саб дня',\r\n      price: 200,\r\n    }],\r\n  }],\r\n}]\r\n\r\nconst placesMap = FOOD_AREAS.reduce((result, area) => {\r\n  area.items.forEach((item) => {\r\n    result[item.link] = item\r\n  })\r\n\r\n  return result\r\n}, {})\r\n\r\nconst foodsMap = FOOD_AREAS.reduce((result, area) => {\r\n  area.items.forEach((item) => {\r\n    item.foods.forEach((food) => {\r\n      result[food.id] = food\r\n    })\r\n  })\r\n\r\n  return result\r\n}, {})\r\n\r\nconst App = () => {\r\n  const [orderStatuses, setOrderStatuses] = useState(JSON.parse((localStorage.getItem('orderStatuses') || 'null')) || {})\r\n  const [order, setOrder] = useState(JSON.parse((localStorage.getItem('orders') || 'null')) || {})\r\n\r\n  return (\r\n    <Router basename={ process.env.PUBLIC_URL }>\r\n      <Switch>\r\n        <Route path='/' exact>\r\n          <Home foodAreas={ FOOD_AREAS } order={ order } />\r\n        </Route>\r\n        <Route path='/order/:areaId/:itemId' exact>\r\n          <Order\r\n            foodAreas={ FOOD_AREAS }\r\n            order={ order }\r\n            setActiveOrder={ ({ itemId }) => {\r\n              const nextStatuses = { ...orderStatuses }\r\n\r\n              nextStatuses[itemId] = 'ACTIVE'\r\n\r\n              setOrderStatuses(nextStatuses)\r\n              localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses))\r\n            } }\r\n            setCanceledOrder={ ({ itemId }) => {\r\n              const nextStatuses = { ...orderStatuses }\r\n\r\n              nextStatuses[itemId] = 'CANCELED'\r\n\r\n              setOrderStatuses(nextStatuses)\r\n              localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses))\r\n            } }\r\n          />\r\n        </Route>\r\n        <Route path='/basket/:areaId/:itemId' exact>\r\n          <Basket\r\n            foodAreas={ FOOD_AREAS }\r\n            order={ order }\r\n          />\r\n        </Route>\r\n        <Route\r\n          path='/orders'\r\n          exact\r\n        >\r\n          <Orders\r\n            order={ order }\r\n            orderStatuses={ orderStatuses }\r\n            foodAreas={ FOOD_AREAS }\r\n            setFinishedOrder={ ({ itemId }) => {\r\n              const nextStatuses = { ...orderStatuses }\r\n\r\n              nextStatuses[itemId] = 'DONE'\r\n\r\n              setOrderStatuses(nextStatuses)\r\n              localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses))\r\n            } }\r\n            setActiveOrder={ ({ itemId }) => {\r\n              const nextStatuses = { ...orderStatuses }\r\n\r\n              nextStatuses[itemId] = 'ACTIVE'\r\n\r\n              setOrderStatuses(nextStatuses)\r\n              localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses))\r\n            } }\r\n            setCanceledOrder={ ({ itemId }) => {\r\n              const nextStatuses = { ...orderStatuses }\r\n\r\n              nextStatuses[itemId] = 'CANCELED'\r\n\r\n              setOrderStatuses(nextStatuses)\r\n              localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses))\r\n            } }\r\n          />\r\n        </Route>\r\n        <Route\r\n          path='/place/:area/:place'\r\n          render={ (routeProps) => {\r\n            return (\r\n              <Place\r\n                { ...routeProps }\r\n                item={ placesMap[routeProps.location.pathname] }\r\n                area={ FOOD_AREAS[0] }\r\n                order={ order }\r\n                onIncrementPosition={ ({ id, itemId, areaId }) => {\r\n                  const updatedOrder = { ...order }\r\n\r\n                  if (id in updatedOrder) {\r\n                    updatedOrder[id].count++\r\n                  } else {\r\n                    updatedOrder[id] = {\r\n                      item: foodsMap[id],\r\n                      count: 1,\r\n                    }\r\n                  }\r\n\r\n                  const nextOrderStatuses = { ...orderStatuses }\r\n\r\n                  if (Object.keys(nextOrderStatuses).length === 0) {\r\n                    FOOD_AREAS.forEach((area) => {\r\n                      area.items.forEach((item) => {\r\n                        item.foods.forEach((food) => {\r\n                          if (food.id in order) {\r\n                            const status = item.id === itemId ? 'ACTIVE' : 'DONE'\r\n\r\n                            nextOrderStatuses[item.id] = status\r\n                          }\r\n                        })\r\n                      })\r\n                    })\r\n                  }\r\n\r\n                  const serialized = JSON.stringify(updatedOrder)\r\n\r\n                  localStorage.setItem('orders', serialized)\r\n                  localStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses))\r\n\r\n                  setOrder(updatedOrder)\r\n                  setOrderStatuses(nextOrderStatuses)\r\n                } }\r\n                onDecrementPosition={ ({ id, itemId, areaId }) => {\r\n                  const updatedOrder = { ...order }\r\n\r\n                  if (id in updatedOrder) {\r\n                    if (updatedOrder[id].count === 1) {\r\n                      delete updatedOrder[id]\r\n                    } else {\r\n                      updatedOrder[id].count--\r\n                    }\r\n                  }\r\n\r\n                  const nextOrderStatuses = { ...orderStatuses }\r\n\r\n                  if (Object.keys(nextOrderStatuses).length === 0) {\r\n                    FOOD_AREAS.forEach((area) => {\r\n                      area.items.forEach((item) => {\r\n                        item.foods.forEach((food) => {\r\n                          if (food.id in order) {\r\n                            const status = item.id === itemId ? 'ACTIVE' : 'DONE'\r\n\r\n                            nextOrderStatuses[item.id] = status\r\n                          }\r\n                        })\r\n                      })\r\n                    })\r\n                  }\r\n\r\n                  const serialized = JSON.stringify(updatedOrder)\r\n\r\n                  localStorage.setItem('orders', serialized)\r\n                  localStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses))\r\n\r\n                  setOrder(updatedOrder)\r\n                  setOrderStatuses(nextOrderStatuses)\r\n                } }\r\n              />\r\n            )\r\n          } }\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import 'core-js/features/map'\r\nimport 'core-js/features/set'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport App from './App'\r\n// import registerServiceWorker from './sw';\r\n\r\n// Init VK Mini App\r\nbridge.send('VKWebAppInit')\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\r\n// registerServiceWorker();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n","module.exports = __webpack_public_path__ + \"static/media/edit.3e408ef2.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.dfc54362.png\";","module.exports = __webpack_public_path__ + \"static/media/3.dbf82c38.png\";","module.exports = __webpack_public_path__ + \"static/media/2.20489759.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e671d539.png\";","module.exports = __webpack_public_path__ + \"static/media/check-symbol.dd480b0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh-button.36053a5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/kfc.4fd2ba47.png\";","module.exports = __webpack_public_path__ + \"static/media/burger.35bcd067.png\";","module.exports = __webpack_public_path__ + \"static/media/mcdac.60464810.png\";","module.exports = __webpack_public_path__ + \"static/media/sub.4eb05fdd.png\";"],"sourceRoot":""}